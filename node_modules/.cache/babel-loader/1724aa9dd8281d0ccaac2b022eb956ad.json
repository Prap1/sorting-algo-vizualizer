{"ast":null,"code":"var _jsxFileName = \"E:\\\\sorting algorithm vizualizer\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport SelectionSort from \"./algorithms/Selection\";\nimport Play from \"@material-ui/icons/PlayCircleOutlineRounded\";\nimport Forward from \"@material-ui/icons/SkipNextRounded\";\nimport Backward from \"@material-ui/icons/SkipPreviousRounded\";\nimport RotateLeft from \"@material-ui/icons/RotateLeft\";\nimport Bar from \"./components/Bar\";\nimport \"./App.css\";\nimport Header from \"./header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      arraySteps: [],\n      colorKey: [],\n      colorSteps: [],\n      currentStep: 0,\n      count: 10,\n      delay: 500,\n      algorithm: \"Selection Sort\",\n      timeouts: []\n    };\n    this.ALGORITHMS = {\n      \"Selection Sort\": SelectionSort\n    };\n\n    this.generateSteps = () => {\n      let array = this.state.array.slice();\n      let steps = this.state.arraySteps.slice();\n      let colorSteps = this.state.colorSteps.slice();\n      this.ALGORITHMS[this.state.algorithm](array, 0, steps, colorSteps);\n      this.setState({\n        arraySteps: steps,\n        colorSteps: colorSteps\n      });\n    };\n\n    this.clearTimeouts = () => {\n      this.state.timeouts.forEach(timeout => clearTimeout(timeout));\n      this.setState({\n        timeouts: []\n      });\n    };\n\n    this.clearColorKey = () => {\n      let blankKey = new Array(this.state.count).fill(0);\n      this.setState({\n        colorKey: blankKey,\n        colorSteps: [blankKey]\n      });\n    };\n\n    this.generateRandomNumber = (min, max) => {\n      return Math.floor(Math.random() * (max - min) + min);\n    };\n\n    this.generateRandomArray = () => {\n      this.clearTimeouts();\n      this.clearColorKey();\n      const count = this.state.count;\n      const temp = [];\n\n      for (let i = 0; i < count; i++) {\n        temp.push(this.generateRandomNumber(50, 200));\n      }\n\n      this.setState({\n        array: temp,\n        arraySteps: [temp],\n        currentStep: 0\n      }, () => {\n        this.generateSteps();\n      });\n    };\n\n    this.changeArray = (index, value) => {\n      let arr = this.state.array;\n      arr[index] = value;\n      this.setState({\n        array: arr,\n        arraySteps: [arr],\n        currentStep: 0\n      }, () => {\n        this.generateSteps();\n      });\n    };\n\n    this.previousStep = () => {\n      let currentStep = this.state.currentStep;\n      if (currentStep === 0) return;\n      currentStep -= 1;\n      this.setState({\n        currentStep: currentStep,\n        array: this.state.arraySteps[currentStep],\n        colorKey: this.state.colorSteps[currentStep]\n      });\n    };\n\n    this.nextStep = () => {\n      let currentStep = this.state.currentStep;\n      if (currentStep >= this.state.arraySteps.length - 1) return;\n      currentStep += 1;\n      this.setState({\n        currentStep: currentStep,\n        array: this.state.arraySteps[currentStep],\n        colorKey: this.state.colorSteps[currentStep]\n      });\n    };\n\n    this.start = () => {\n      let steps = this.state.arraySteps;\n      let colorSteps = this.state.colorSteps;\n      this.clearTimeouts();\n      let timeouts = [];\n      let i = 0;\n\n      while (i < steps.length - this.state.currentStep) {\n        let timeout = setTimeout(() => {\n          let currentStep = this.state.currentStep;\n          this.setState({\n            array: steps[currentStep],\n            colorKey: colorSteps[currentStep],\n            currentStep: currentStep + 1\n          });\n          timeouts.push(timeout);\n        }, this.state.delay * i);\n        i++;\n      }\n\n      this.setState({\n        timeouts: timeouts\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  render() {\n    let bars = this.state.array.map((value, index) => /*#__PURE__*/_jsxDEV(Bar, {\n      index: index,\n      length: value,\n      color: this.state.colorKey[index],\n      changeArray: this.changeArray\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this));\n    let playButton;\n\n    if (this.state.arraySteps.length === this.state.currentStep) {\n      playButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controller\",\n        onClick: this.generateRandomArray,\n        children: /*#__PURE__*/_jsxDEV(RotateLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this);\n    } else {\n      playButton = /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"controller\",\n        onClick: this.start,\n        children: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barsDiv container card\",\n          children: bars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-pannel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"controller\",\n            onClick: this.previousStep,\n            children: /*#__PURE__*/_jsxDEV(Backward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), playButton, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"controller\",\n            onClick: this.nextStep,\n            children: /*#__PURE__*/_jsxDEV(Forward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pannel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/sorting algorithm vizualizer/src/App.js"],"names":["React","Component","SelectionSort","Play","Forward","Backward","RotateLeft","Bar","Header","App","state","array","arraySteps","colorKey","colorSteps","currentStep","count","delay","algorithm","timeouts","ALGORITHMS","generateSteps","slice","steps","setState","clearTimeouts","forEach","timeout","clearTimeout","clearColorKey","blankKey","Array","fill","generateRandomNumber","min","max","Math","floor","random","generateRandomArray","temp","i","push","changeArray","index","value","arr","previousStep","nextStep","length","start","setTimeout","componentDidMount","render","bars","map","playButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SelectionSort from \"./algorithms/Selection\";\nimport Play from \"@material-ui/icons/PlayCircleOutlineRounded\";\nimport Forward from \"@material-ui/icons/SkipNextRounded\";\nimport Backward from \"@material-ui/icons/SkipPreviousRounded\";\nimport RotateLeft from \"@material-ui/icons/RotateLeft\";\nimport Bar from \"./components/Bar\";\nimport \"./App.css\";\nimport Header from \"./header/Header\";\n\nclass App extends Component {\n  state = {\n    array: [],\n    arraySteps: [],\n    colorKey: [],\n    colorSteps: [],\n    currentStep: 0,\n    count: 10,\n    delay: 500,\n    algorithm: \"Selection Sort\",\n    timeouts: [],\n  };\n\n  ALGORITHMS = {\n    \"Selection Sort\": SelectionSort,\n  };\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  generateSteps = () => {\n    let array = this.state.array.slice();\n    let steps = this.state.arraySteps.slice();\n    let colorSteps = this.state.colorSteps.slice();\n\n    this.ALGORITHMS[this.state.algorithm](array, 0, steps, colorSteps);\n\n    this.setState({\n      arraySteps: steps,\n      colorSteps: colorSteps,\n    });\n  };\n\n  clearTimeouts = () => {\n    this.state.timeouts.forEach((timeout) => clearTimeout(timeout));\n    this.setState({\n      timeouts: [],\n    });\n  };\n\n  clearColorKey = () => {\n    let blankKey = new Array(this.state.count).fill(0);\n\n    this.setState({\n      colorKey: blankKey,\n      colorSteps: [blankKey],\n    });\n  };\n\n  generateRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  generateRandomArray = () => {\n    this.clearTimeouts();\n    this.clearColorKey();\n    const count = this.state.count;\n    const temp = [];\n\n    for (let i = 0; i < count; i++) {\n      temp.push(this.generateRandomNumber(50, 200));\n    }\n\n    this.setState(\n      {\n        array: temp,\n        arraySteps: [temp],\n        currentStep: 0,\n      },\n      () => {\n        this.generateSteps();\n      }\n    );\n  };\n\n  changeArray = (index, value) => {\n    let arr = this.state.array;\n    arr[index] = value;\n    this.setState(\n      {\n        array: arr,\n        arraySteps: [arr],\n        currentStep: 0,\n      },\n      () => {\n        this.generateSteps();\n      }\n    );\n  };\n\n  previousStep = () => {\n    let currentStep = this.state.currentStep;\n    if (currentStep === 0) return;\n    currentStep -= 1;\n    this.setState({\n      currentStep: currentStep,\n      array: this.state.arraySteps[currentStep],\n      colorKey: this.state.colorSteps[currentStep],\n    });\n  };\n\n  nextStep = () => {\n    let currentStep = this.state.currentStep;\n    if (currentStep >= this.state.arraySteps.length - 1) return;\n    currentStep += 1;\n    this.setState({\n      currentStep: currentStep,\n      array: this.state.arraySteps[currentStep],\n      colorKey: this.state.colorSteps[currentStep],\n    });\n  };\n\n  start = () => {\n    let steps = this.state.arraySteps;\n    let colorSteps = this.state.colorSteps;\n\n    this.clearTimeouts();\n\n    let timeouts = [];\n    let i = 0;\n\n    while (i < steps.length - this.state.currentStep) {\n      let timeout = setTimeout(() => {\n        let currentStep = this.state.currentStep;\n        this.setState({\n          array: steps[currentStep],\n          colorKey: colorSteps[currentStep],\n          currentStep: currentStep + 1,\n        });\n        timeouts.push(timeout);\n      }, this.state.delay * i);\n      i++;\n    }\n\n    this.setState({\n      timeouts: timeouts,\n    });\n  };\n\n  render() {\n    let bars = this.state.array.map((value, index) => (\n      <Bar\n        key={index}\n        index={index}\n        length={value}\n        color={this.state.colorKey[index]}\n        changeArray={this.changeArray}\n      />\n    ));\n\n    let playButton;\n\n    if (this.state.arraySteps.length === this.state.currentStep) {\n      playButton = (\n        <button className=\"controller\" onClick={this.generateRandomArray}>\n          <RotateLeft />\n        </button>\n      );\n    } else {\n      playButton = (\n        <button className=\"controller\" onClick={this.start}>\n          <Play />\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <div className=\"frame\">\n          <div className=\"barsDiv container card\">{bars}</div>\n        </div>\n        <div className=\"control-pannel\">\n          <div className=\"control-buttons\">\n            <button className=\"controller\" onClick={this.previousStep}>\n              <Backward />\n            </button>\n            {playButton}\n            <button className=\"controller\" onClick={this.nextStep}>\n              <Forward />\n            </button>\n          </div>\n        </div>\n        <div className=\"pannel\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}