{"ast":null,"code":"import{swap}from\"./helper\";var selection=function selection(array,position,arraySteps,colorSteps){var colorKey=colorSteps[colorSteps.length-1].slice();for(var i=0;i<array.length-1;i++){var min_index=i;for(var j=i+1;j<array.length;j++){if(array[j]<array[min_index]){min_index=j;}colorKey[min_index]=1;colorKey[j]=1;arraySteps.push(array.slice());colorSteps.push(colorKey.slice());colorKey[min_index]=0;colorKey[j]=0;}swap(array,min_index,i);colorKey[i]=2;arraySteps.push(array.slice());colorSteps.push(colorKey.slice());}colorSteps[colorSteps.length-1]=new Array(array.length).fill(2);};export default selection;","map":{"version":3,"sources":["E:/sorting algorithm vizualizer/src/algorithms/Selection.js"],"names":["swap","selection","array","position","arraySteps","colorSteps","colorKey","length","slice","i","min_index","j","push","Array","fill"],"mappings":"AAAA,OAASA,IAAT,KAAqB,UAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,QAAR,CAAkBC,UAAlB,CAA8BC,UAA9B,CAA6C,CAC7D,GAAIC,CAAAA,QAAQ,CAAGD,UAAU,CAACA,UAAU,CAACE,MAAX,CAAoB,CAArB,CAAV,CAAkCC,KAAlC,EAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGP,KAAK,CAACK,MAAN,CAAe,CAAnC,CAAsCE,CAAC,EAAvC,CAA2C,CACzC,GAAIC,CAAAA,SAAS,CAAGD,CAAhB,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAGF,CAAC,CAAG,CAAjB,CAAoBE,CAAC,CAAGT,KAAK,CAACK,MAA9B,CAAsCI,CAAC,EAAvC,CAA2C,CACzC,GAAIT,KAAK,CAACS,CAAD,CAAL,CAAWT,KAAK,CAACQ,SAAD,CAApB,CAAiC,CAC/BA,SAAS,CAAGC,CAAZ,CACD,CACDL,QAAQ,CAACI,SAAD,CAAR,CAAsB,CAAtB,CACAJ,QAAQ,CAACK,CAAD,CAAR,CAAc,CAAd,CACAP,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB,EACAH,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB,EACAF,QAAQ,CAACI,SAAD,CAAR,CAAsB,CAAtB,CACAJ,QAAQ,CAACK,CAAD,CAAR,CAAc,CAAd,CACD,CACDX,IAAI,CAACE,KAAD,CAAQQ,SAAR,CAAmBD,CAAnB,CAAJ,CACAH,QAAQ,CAACG,CAAD,CAAR,CAAc,CAAd,CACAL,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB,EACAH,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB,EACD,CACDH,UAAU,CAACA,UAAU,CAACE,MAAX,CAAoB,CAArB,CAAV,CAAoC,GAAIM,CAAAA,KAAJ,CAAUX,KAAK,CAACK,MAAhB,EAAwBO,IAAxB,CAA6B,CAA7B,CAApC,CACD,CArBD,CAuBA,cAAeb,CAAAA,SAAf","sourcesContent":["import { swap } from \"./helper\";\r\n\r\nconst selection = (array, position, arraySteps, colorSteps) => {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    let min_index = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      if (array[j] < array[min_index]) {\r\n        min_index = j;\r\n      }\r\n      colorKey[min_index] = 1;\r\n      colorKey[j] = 1;\r\n      arraySteps.push(array.slice());\r\n      colorSteps.push(colorKey.slice());\r\n      colorKey[min_index] = 0;\r\n      colorKey[j] = 0;\r\n    }\r\n    swap(array, min_index, i);\r\n    colorKey[i] = 2;\r\n    arraySteps.push(array.slice());\r\n    colorSteps.push(colorKey.slice());\r\n  }\r\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n};\r\n\r\nexport default selection;\r\n"]},"metadata":{},"sourceType":"module"}